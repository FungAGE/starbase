# Environment Configuration Template for STARBASE Local Single-Pod Testing
# Copy this file to .env and modify values as needed

# Application Environment
ENVIRONMENT=development
DEV_MODE=true

# Network Configuration
# Set to your local IP address (not localhost) for proper ingress simulation
# Example: if your local IP is 192.168.1.10, use 192.168.1.10.nip.io
AUTH_DOMAIN=127.0.0.1.nip.io
HOST_IP=127.0.0.1
EXTERNAL_PORT=8080

# Service URLs (will be automatically constructed based on AUTH_DOMAIN)
HOME_URL=/
WIKI_URL=/wiki
BLAST_URL=/blast
ABOUT_URL=/about
PGV_URL=/pgv
SUBMIT_URL=/submit
METRICS_URL=/metrics

# API Keys (optional - for geolocation features)
IPSTACK_API_KEY=your_ipstack_api_key_here
MAINTENANCE_TOKEN=your_maintenance_token_here

# Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=starbase
DB_USER=starbase
DB_PASSWORD=starbase_password

# Cache Configuration
CACHE_TIMEOUT=300
REDIS_URL=redis://localhost:6379/0

# Celery Configuration
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0
CELERY_WORKER_CONCURRENCY=2
CELERY_TASK_TIME_LIMIT=300
CELERY_TASK_SOFT_TIME_LIMIT=90

# Resource Limits (mimicking Kubernetes pod limits)
# Docker Compose format: memory in bytes (2G = 2GB), CPU as float (1.0 = 1 CPU core)
MEMORY_LIMIT=2G
CPU_LIMIT=1.0
MEMORY_REQUEST=1G
CPU_REQUEST=0.5

# Volume Mounts (simulating Kubernetes persistent volumes)
# Main data directory - contains SQLite DBs, BLAST DBs, HMM files, etc.
DATA_VOLUME=./src/database/db
# Cache directory (subdirectory of data volume)
CACHE_VOLUME=./src/database/db/cache
# Application logs
LOGS_VOLUME=./logs

# Security Context (mimicking Kubernetes security context)
RUN_AS_USER=1000
RUN_AS_GROUP=1000
FS_GROUP=1000

# Kubernetes-like Environment Variables
KUBERNETES_SERVICE_HOST=127.0.0.1
KUBERNETES_SERVICE_PORT=443
POD_NAME=starbase-local-pod
POD_NAMESPACE=default
POD_IP=127.0.0.1
NODE_NAME=local-node

# Application Specific Settings
PYTHONPATH=/home/starbase:/home/starbase/src
PYTHONNOUSERSITE=1
PYTHONUNBUFFERED=1
SQLALCHEMY_WARN_20=1
SQLALCHEMY_SILENCE_UBER_WARNING=1

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3
HEALTH_CHECK_START_PERIOD=60s

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
