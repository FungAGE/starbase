"""Baseline - current database state

Revision ID: b29b0a6f346b
Revises: 
Create Date: 2025-08-29 12:02:22.266524

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b29b0a6f346b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sqlite_sequence')
    op.alter_column('accessions', 'ship_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('accessions', 'accession_tag',
               existing_type=sa.NUMERIC(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('accessions', 'version_tag',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               nullable=True,
               existing_server_default=sa.text('1'))
    op.drop_index(op.f('idx_accessions_id'), table_name='accessions')
    op.drop_index(op.f('idx_accessions_tag'), table_name='accessions')
    op.create_unique_constraint(None, 'accessions', ['accession_tag'])
    op.alter_column('captains', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('captains', 'captainID',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('captains', 'sequence',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('captains', 'reviewed',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_unique_constraint(None, 'captains', ['captainID'])
    op.create_foreign_key(None, 'captains', 'accessions', ['ship_id'], ['id'])
    op.drop_column('captains', 'evidence')
    op.alter_column('family_names', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.drop_index(op.f('idx_family_names_family'), table_name='family_names')
    op.drop_index(op.f('idx_family_names_reference'), table_name='family_names')
    op.alter_column('genomes', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.drop_index(op.f('idx_genomes_taxonomy_id'), table_name='genomes')
    op.create_foreign_key(None, 'genomes', 'taxonomy', ['taxonomy_id'], ['id'])
    op.drop_column('genomes', 'assembly_accession')
    op.add_column('gff', sa.Column('contigID', sa.String(), nullable=True))
    op.add_column('gff', sa.Column('accession', sa.String(), nullable=True))
    op.alter_column('gff', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('gff', 'phase',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.drop_index(op.f('idx_gff_accession_id'), table_name='gff')
    op.drop_index(op.f('idx_gff_ship_id'), table_name='gff')
    op.drop_constraint(None, 'gff', type_='foreignkey')
    op.drop_constraint(None, 'gff', type_='foreignkey')
    op.create_foreign_key(None, 'gff', 'accessions', ['ship_id'], ['id'])
    op.drop_column('gff', 'accession_id')
    op.alter_column('haplotype_names', 'haplotype_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('haplotype_names', 'previous_haplotype_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_foreign_key(None, 'haplotype_names', 'family_names', ['ship_family_id'], ['id'])
    op.create_foreign_key(None, 'haplotype_names', 'navis_names', ['navis_id'], ['id'])
    op.add_column('joined_ships', sa.Column('genus', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('species', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('strain', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('contigID', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('captainID', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('elementBegin', sa.Integer(), nullable=True))
    op.add_column('joined_ships', sa.Column('elementEnd', sa.Integer(), nullable=True))
    op.add_column('joined_ships', sa.Column('size', sa.Integer(), nullable=True))
    op.add_column('joined_ships', sa.Column('strand', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('boundaryType', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('emptySiteID', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('emptyContig', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('emptyBegin', sa.Integer(), nullable=True))
    op.add_column('joined_ships', sa.Column('emptyEnd', sa.Integer(), nullable=True))
    op.add_column('joined_ships', sa.Column('emptySeq', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('upDR', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('downDR', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('DRedit', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('upTIR', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('downTIR', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('TIRedit', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('nestedInside', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('containNested', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('dr', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('tir', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('navis_name', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('haplotype_name', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('target', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('spok', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('ars', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('other', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('hgt', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('taxid', sa.Integer(), nullable=True))
    op.add_column('joined_ships', sa.Column('ome', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('orphan', sa.String(), nullable=True))
    op.add_column('joined_ships', sa.Column('captainID_new', sa.Integer(), nullable=True))
    op.alter_column('joined_ships', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('joined_ships', 'starshipID',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True)
    op.alter_column('joined_ships', 'evidence',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('joined_ships', 'source',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('joined_ships', 'curated_status',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('joined_ships', 'genome_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_index(op.f('idx_joined_ships_curated'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_final_captain'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_final_family'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_final_genome'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_final_haplotype'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_final_navis'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_final_ship'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_final_starshipid'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_final_taxonomy'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_genome_id'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_ship_family_id'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_ship_haplotype_id'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_ship_id'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_ship_navis_id'), table_name='joined_ships')
    op.drop_index(op.f('idx_joined_ships_tax_id'), table_name='joined_ships')
    op.drop_constraint(None, 'joined_ships', type_='foreignkey')
    op.drop_constraint(None, 'joined_ships', type_='foreignkey')
    op.drop_constraint(None, 'joined_ships', type_='foreignkey')
    op.drop_constraint(None, 'joined_ships', type_='foreignkey')
    op.drop_constraint(None, 'joined_ships', type_='foreignkey')
    op.create_foreign_key(None, 'joined_ships', 'accessions', ['ship_id'], ['id'])
    op.drop_column('joined_ships', 'ship_navis_id')
    op.drop_column('joined_ships', 'ship_haplotype_id')
    op.drop_column('joined_ships', 'updated_at')
    op.drop_column('joined_ships', 'tax_id')
    op.drop_column('joined_ships', 'captain_id')
    op.drop_column('joined_ships', 'created_at')
    op.alter_column('navis_names', 'navis_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('navis_names', 'previous_navis_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('navis_names', 'ship_family_id',
               existing_type=sa.TEXT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.create_foreign_key(None, 'navis_names', 'family_names', ['ship_family_id'], ['id'])
    op.alter_column('papers', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('papers', 'Key',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('papers', 'ItemType',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('papers', 'Author',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('papers', 'Title',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('papers', 'PublicationTitle',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('papers', 'DOI',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('papers', 'Url',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('papers', 'AbstractNote',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('papers', 'Date',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('papers', 'starshipMentioned',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('papers', 'typePaper',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('ships', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('ships', 'sequence',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('ships', 'md5',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_index(op.f('idx_ships_accession_id'), table_name='ships')
    op.drop_column('ships', 'sequence_length')
    op.drop_column('ships', 'header')
    op.alter_column('starship_features', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.drop_index(op.f('idx_starship_features_accession_id'), table_name='starship_features')
    op.drop_index(op.f('idx_starship_features_ship_id'), table_name='starship_features')
    op.drop_index(op.f('idx_starship_features_starshipID'), table_name='starship_features')
    op.drop_constraint(None, 'starship_features', type_='foreignkey')
    op.drop_constraint(None, 'starship_features', type_='foreignkey')
    op.create_foreign_key(None, 'starship_features', 'captains', ['captain_id'], ['id'])
    op.create_foreign_key(None, 'starship_features', 'accessions', ['ship_id'], ['id'])
    op.drop_column('starship_features', 'accession_id')
    op.drop_column('starship_features', 'target')
    op.drop_column('starship_features', 'other')
    op.drop_column('starship_features', 'spok')
    op.drop_column('starship_features', 'tir')
    op.drop_column('starship_features', 'hgt')
    op.drop_column('starship_features', 'dr')
    op.drop_column('starship_features', 'ars')
    op.alter_column('taxonomy', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.drop_index(op.f('idx_taxonomy_name'), table_name='taxonomy')
    op.drop_index(op.f('idx_taxonomy_species'), table_name='taxonomy')
    op.drop_index(op.f('idx_taxonomy_taxid'), table_name='taxonomy')
    op.drop_column('taxonomy', 'strain')
    op.drop_column('taxonomy', 'species_group')
    op.drop_column('taxonomy', 'subgenus')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('taxonomy', sa.Column('subgenus', sa.VARCHAR(), nullable=True))
    op.add_column('taxonomy', sa.Column('species_group', sa.VARCHAR(), nullable=True))
    op.add_column('taxonomy', sa.Column('strain', sa.VARCHAR(), nullable=True))
    op.create_index(op.f('idx_taxonomy_taxid'), 'taxonomy', ['taxID'], unique=False)
    op.create_index(op.f('idx_taxonomy_species'), 'taxonomy', ['species'], unique=False)
    op.create_index(op.f('idx_taxonomy_name'), 'taxonomy', ['name'], unique=False)
    op.alter_column('taxonomy', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.add_column('starship_features', sa.Column('ars', sa.TEXT(), nullable=True))
    op.add_column('starship_features', sa.Column('dr', sa.TEXT(), nullable=True))
    op.add_column('starship_features', sa.Column('hgt', sa.TEXT(), nullable=True))
    op.add_column('starship_features', sa.Column('tir', sa.TEXT(), nullable=True))
    op.add_column('starship_features', sa.Column('spok', sa.TEXT(), nullable=True))
    op.add_column('starship_features', sa.Column('other', sa.TEXT(), nullable=True))
    op.add_column('starship_features', sa.Column('target', sa.TEXT(), nullable=True))
    op.add_column('starship_features', sa.Column('accession_id', sa.INTEGER(), nullable=True))
    op.drop_constraint(None, 'starship_features', type_='foreignkey')
    op.drop_constraint(None, 'starship_features', type_='foreignkey')
    op.create_foreign_key(None, 'starship_features', 'accessions', ['accession_id'], ['id'])
    op.create_foreign_key(None, 'starship_features', 'ships', ['ship_id'], ['id'])
    op.create_index(op.f('idx_starship_features_starshipID'), 'starship_features', ['starshipID'], unique=False)
    op.create_index(op.f('idx_starship_features_ship_id'), 'starship_features', ['ship_id'], unique=False)
    op.create_index(op.f('idx_starship_features_accession_id'), 'starship_features', ['accession_id'], unique=False)
    op.alter_column('starship_features', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.add_column('ships', sa.Column('header', sa.VARCHAR(), nullable=True))
    op.add_column('ships', sa.Column('sequence_length', sa.INTEGER(), nullable=True))
    op.create_index(op.f('idx_ships_accession_id'), 'ships', ['accession_id'], unique=False)
    op.alter_column('ships', 'md5',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('ships', 'sequence',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('ships', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.alter_column('papers', 'typePaper',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('papers', 'starshipMentioned',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('papers', 'Date',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('papers', 'AbstractNote',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('papers', 'Url',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('papers', 'DOI',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('papers', 'PublicationTitle',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('papers', 'Title',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('papers', 'Author',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('papers', 'ItemType',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('papers', 'Key',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('papers', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_constraint(None, 'navis_names', type_='foreignkey')
    op.alter_column('navis_names', 'ship_family_id',
               existing_type=sa.Integer(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('navis_names', 'previous_navis_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('navis_names', 'navis_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.add_column('joined_ships', sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.add_column('joined_ships', sa.Column('captain_id', sa.INTEGER(), nullable=True))
    op.add_column('joined_ships', sa.Column('tax_id', sa.INTEGER(), nullable=True))
    op.add_column('joined_ships', sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.add_column('joined_ships', sa.Column('ship_haplotype_id', sa.INTEGER(), nullable=True))
    op.add_column('joined_ships', sa.Column('ship_navis_id', sa.INTEGER(), nullable=True))
    op.drop_constraint(None, 'joined_ships', type_='foreignkey')
    op.create_foreign_key(None, 'joined_ships', 'navis_names', ['ship_navis_id'], ['id'])
    op.create_foreign_key(None, 'joined_ships', 'captains', ['captain_id'], ['id'])
    op.create_foreign_key(None, 'joined_ships', 'taxonomy', ['tax_id'], ['id'])
    op.create_foreign_key(None, 'joined_ships', 'haplotype_names', ['ship_haplotype_id'], ['id'])
    op.create_foreign_key(None, 'joined_ships', 'genomes', ['genome_id'], ['id'])
    op.create_index(op.f('idx_joined_ships_tax_id'), 'joined_ships', ['tax_id'], unique=False)
    op.create_index(op.f('idx_joined_ships_ship_navis_id'), 'joined_ships', ['ship_navis_id'], unique=False)
    op.create_index(op.f('idx_joined_ships_ship_id'), 'joined_ships', ['ship_id'], unique=False)
    op.create_index(op.f('idx_joined_ships_ship_haplotype_id'), 'joined_ships', ['ship_haplotype_id'], unique=False)
    op.create_index(op.f('idx_joined_ships_ship_family_id'), 'joined_ships', ['ship_family_id'], unique=False)
    op.create_index(op.f('idx_joined_ships_genome_id'), 'joined_ships', ['genome_id'], unique=False)
    op.create_index(op.f('idx_joined_ships_final_taxonomy'), 'joined_ships', ['tax_id'], unique=False)
    op.create_index(op.f('idx_joined_ships_final_starshipid'), 'joined_ships', ['starshipID'], unique=False)
    op.create_index(op.f('idx_joined_ships_final_ship'), 'joined_ships', ['ship_id'], unique=False)
    op.create_index(op.f('idx_joined_ships_final_navis'), 'joined_ships', ['ship_navis_id'], unique=False)
    op.create_index(op.f('idx_joined_ships_final_haplotype'), 'joined_ships', ['ship_haplotype_id'], unique=False)
    op.create_index(op.f('idx_joined_ships_final_genome'), 'joined_ships', ['genome_id'], unique=False)
    op.create_index(op.f('idx_joined_ships_final_family'), 'joined_ships', ['ship_family_id'], unique=False)
    op.create_index(op.f('idx_joined_ships_final_captain'), 'joined_ships', ['captain_id'], unique=False)
    op.create_index(op.f('idx_joined_ships_curated'), 'joined_ships', ['curated_status'], unique=False)
    op.alter_column('joined_ships', 'genome_id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('joined_ships', 'curated_status',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('joined_ships', 'source',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('joined_ships', 'evidence',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('joined_ships', 'starshipID',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
    op.alter_column('joined_ships', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_column('joined_ships', 'captainID_new')
    op.drop_column('joined_ships', 'orphan')
    op.drop_column('joined_ships', 'ome')
    op.drop_column('joined_ships', 'taxid')
    op.drop_column('joined_ships', 'hgt')
    op.drop_column('joined_ships', 'other')
    op.drop_column('joined_ships', 'ars')
    op.drop_column('joined_ships', 'spok')
    op.drop_column('joined_ships', 'target')
    op.drop_column('joined_ships', 'haplotype_name')
    op.drop_column('joined_ships', 'navis_name')
    op.drop_column('joined_ships', 'tir')
    op.drop_column('joined_ships', 'dr')
    op.drop_column('joined_ships', 'containNested')
    op.drop_column('joined_ships', 'nestedInside')
    op.drop_column('joined_ships', 'TIRedit')
    op.drop_column('joined_ships', 'downTIR')
    op.drop_column('joined_ships', 'upTIR')
    op.drop_column('joined_ships', 'DRedit')
    op.drop_column('joined_ships', 'downDR')
    op.drop_column('joined_ships', 'upDR')
    op.drop_column('joined_ships', 'emptySeq')
    op.drop_column('joined_ships', 'emptyEnd')
    op.drop_column('joined_ships', 'emptyBegin')
    op.drop_column('joined_ships', 'emptyContig')
    op.drop_column('joined_ships', 'emptySiteID')
    op.drop_column('joined_ships', 'boundaryType')
    op.drop_column('joined_ships', 'strand')
    op.drop_column('joined_ships', 'size')
    op.drop_column('joined_ships', 'elementEnd')
    op.drop_column('joined_ships', 'elementBegin')
    op.drop_column('joined_ships', 'captainID')
    op.drop_column('joined_ships', 'contigID')
    op.drop_column('joined_ships', 'strain')
    op.drop_column('joined_ships', 'species')
    op.drop_column('joined_ships', 'genus')
    op.drop_constraint(None, 'haplotype_names', type_='foreignkey')
    op.drop_constraint(None, 'haplotype_names', type_='foreignkey')
    op.alter_column('haplotype_names', 'previous_haplotype_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('haplotype_names', 'haplotype_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.add_column('gff', sa.Column('accession_id', sa.INTEGER(), nullable=True))
    op.drop_constraint(None, 'gff', type_='foreignkey')
    op.create_foreign_key(None, 'gff', 'ships', ['ship_id'], ['id'])
    op.create_foreign_key(None, 'gff', 'accessions', ['accession_id'], ['id'])
    op.create_index(op.f('idx_gff_ship_id'), 'gff', ['ship_id'], unique=False)
    op.create_index(op.f('idx_gff_accession_id'), 'gff', ['accession_id'], unique=False)
    op.alter_column('gff', 'phase',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('gff', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_column('gff', 'accession')
    op.drop_column('gff', 'contigID')
    op.add_column('genomes', sa.Column('assembly_accession', sa.TEXT(), nullable=True))
    op.drop_constraint(None, 'genomes', type_='foreignkey')
    op.create_index(op.f('idx_genomes_taxonomy_id'), 'genomes', ['taxonomy_id'], unique=False)
    op.alter_column('genomes', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.create_index(op.f('idx_family_names_reference'), 'family_names', ['type_element_reference'], unique=False)
    op.create_index(op.f('idx_family_names_family'), 'family_names', ['familyName'], unique=False)
    op.alter_column('family_names', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.add_column('captains', sa.Column('evidence', sa.TEXT(), nullable=True))
    op.drop_constraint(None, 'captains', type_='foreignkey')
    op.drop_constraint(None, 'captains', type_='unique')
    op.alter_column('captains', 'reviewed',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('captains', 'sequence',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('captains', 'captainID',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('captains', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_constraint(None, 'accessions', type_='unique')
    op.create_index(op.f('idx_accessions_tag'), 'accessions', ['accession_tag'], unique=False)
    op.create_index(op.f('idx_accessions_id'), 'accessions', ['id'], unique=False)
    op.alter_column('accessions', 'version_tag',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('1'))
    op.alter_column('accessions', 'accession_tag',
               existing_type=sa.String(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('accessions', 'ship_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.create_table('sqlite_sequence',
    sa.Column('name', sa.NullType(), nullable=True),
    sa.Column('seq', sa.NullType(), nullable=True)
    )
    # ### end Alembic commands ###
